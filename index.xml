<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Biometric Systems</title><link>https://piotrgiedziun.github.io/biometric-systems/</link><description>Recent content on Biometric Systems</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://piotrgiedziun.github.io/biometric-systems/index.xml" rel="self" type="application/rss+xml"/><item><title>Lab 1</title><link>https://piotrgiedziun.github.io/biometric-systems/docs/labs/intro/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://piotrgiedziun.github.io/biometric-systems/docs/labs/intro/</guid><description>Introduction # Introduction to Machine Learning and Python - required to complete the course.
Pre-read (Required) # https://www.kaggle.com/learn/python (Lessons 1-6) https://www.kaggle.com/learn/intro-to-deep-learning (Lessons 1-3) https://www.kaggle.com/learn/computer-vision (Lessons 1-4) Literature (Optional) # Christopher M. Bishop. (2007). Pattern Recognition and Machine Learning Sebastian Raschka (2019). Python Machine Learning: Machine Learning and Deep Learning with Python John M. Zelle, Guido van Rossum. (2016).</description></item><item><title>Lab 2</title><link>https://piotrgiedziun.github.io/biometric-systems/docs/labs/face/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://piotrgiedziun.github.io/biometric-systems/docs/labs/face/</guid><description>Face detection and face recognition # Face detection, face recognition, deep fakes.
Pre-read (Required) # https://www.tensorflow.org/guide/keras/sequential_model https://scikit-image.org/docs/dev/auto_examples/features_detection/plot_hog.html https://opencv24-python-tutorials.readthedocs.io/en/latest/py_tutorials/py_objdetect/py_face_detection/py_face_detection.html Content # Introduction to face detection algorithms (Histogram of Oriented Gradients, Haar Cascades, Deep Neural Network). The aim of the task is to get to know the methods and their strengths and weaknesses. Implementation of the HOG (Histogram of Oriented Gradients) algorithm to detect characteristic points of the face.</description></item></channel></rss>