[{"id":0,"href":"/biometric-systems/docs/course/","title":"Course","section":"Docs","content":" Course # Contact # Piotr Giedziun\npiotr.giedziun@pwr.edu.pl\nReporting requirements # Technical report provide a record of your work and decision making. It should aggregate data and present the data. Use this guide to find out more.\n"},{"id":1,"href":"/biometric-systems/docs/labs/intro/","title":"Lab 1 - Intro","section":"Labs","content":" Introduction # Introduction to Machine Learning and Python - required to complete the course.\nPre-read (Required) # https://www.kaggle.com/learn/python (Lessons 1-6) https://www.kaggle.com/learn/intro-to-deep-learning (Lessons 1-3) https://www.kaggle.com/learn/computer-vision (Lessons 1-4) Literature (Optional) # Christopher M. Bishop. (2007). Pattern Recognition and Machine Learning Sebastian Raschka (2019). Python Machine Learning: Machine Learning and Deep Learning with Python John M. Zelle, Guido van Rossum. (2016). Python Programming: An Introduction to Computer Science Demo project # This is a handwritten digit recognizer created during the class. Draw a digit and click on \u0026ldquo;predict\u0026rdquo;.\nClass content # Introduction to the Google Colab environment, characteristics of working in an interactive environment Introduction to Python. The basics required to complete the course Introduction to Machine Learning (mean square error and gradient descent) Construction of a simple neural network using the TensorFlow library Introduction of the concepts of accuracy, confusion matrix and optimizer Implementation of a neural network (multilayer perceptron) on the MNIST dataset (preparing a dataset, dividing data into a test and training set, intro to loss functions, graph analysis) Implementation of the convolutional network for the same dataset. Interactive overview of convolutional layers, max pooling, activation and fully connected (dense) "},{"id":2,"href":"/biometric-systems/docs/labs/face/","title":"Lab 2 - Face","section":"Labs","content":" Face biometrics # The class covers face detection, face recognition and methods of spoofing them with deep fakes.\nPre-read (Required) # https://www.tensorflow.org/guide/keras/sequential_model https://scikit-image.org/docs/dev/auto_examples/features_detection/plot_hog.html https://opencv24-python-tutorials.readthedocs.io/en/latest/py_tutorials/py_objdetect/py_face_detection/py_face_detection.html Class content # Introduction to face detection algorithms (Histogram of Oriented Gradients, Haar Cascades, Deep Neural Network). The aim of the task is to get to know the methods and their strengths and weaknesses. Implementation of the HOG (Histogram of Oriented Gradients) algorithm to detect characteristic points of the face. Development and implementation of selected features and algorithms to verify the similarity (e.g. calculating the distance between face elements and their comparison). Implementation of the identification function based on the face pattern. A test set is provided for the task, on which the effectiveness of the solution should be verified. The function and algorithms used in this activity will be evaluated in the next class. The group with the highest score will receive additional points. Preparation of a set of training data for eye color recognition and model implementation. Comparison of the deep learning method with the traditional, previously implemented methods. Analysis of the safety and effectiveness of the implemented methods. Deep fake implementation and its practical applications. "},{"id":3,"href":"/biometric-systems/docs/labs/iris/","title":"Lab 3 - Iris","section":"Labs","content":" Iris recognition # Identifying the characteristics of the iris is a similar process to identifying it with the facial pattern and fingerprint. The system segments the image of the iris and then converts it into a pattern which is compared with the pattern. Iris readers often use an additional system to illuminate the eye with near-infrared light.\nPre-read (Required) # https://www.tensorflow.org/addons/tutorials/losses_triplet https://www.tensorflow.org/tensorboard/tensorboard_projector_plugin https://www.v7labs.com/blog/image-segmentation-guide Demo project # This project implements image similarity (using triplet loss) for handwritten digits. The table presented as result is a list of cosine similarities for each digit (0-9) to the drawn image.\nClass content # Introduction to the segmentation and related metrics (IoU, Dice score). Analysis of classic algorithms for automatic detection and segmentation of the iris (Geodesic Active Contours, SuperPixel Segmentation - SPS, Hough Transform). Construction of the U-NET network for iris segmentation on the CASIA V 4.0 set. Transformation of the iris image to the Cartesian coordinate system Extracting features with the Gabor filter. Analysis of the influence of light on the pattern. Use Hamming distance to calculate the distance between vectors Build iris embedding (a vector that represents the features extracted from the iris). Create Deep Neural Network that creates a mapping from iris images to a compact Euclidean space where distances directly represent iris similarity. "},{"id":4,"href":"/biometric-systems/docs/labs/voice/","title":"Lab 4 - Voice","section":"Labs","content":" Voice biometrics # Identification and voice recognition are issues that have a number of practical applications in automation, authentication and security. It is a popular method of remote authorization thanks to its non-invasive and accessibility (e.g. telephone, personal computer). This method combines physical and behavioral elements. It uses a person\u0026rsquo;s acoustic features, which are shaped by biological features (e.g. the shape of the larynx) and by additional behavioral features such as stress, rhythm, intonation and vocabulary selection.\nPre-read (Required) # https://azure.microsoft.com/en-us/services/cognitive-services/speaker-recognition/#features https://docs.microsoft.com/en-us/azure/cognitive-services/speech-service/speaker-recognition-overview#speaker-verification https://docs.scipy.org/doc/scipy/reference/generated/scipy.signal.spectrogram.html Class content # Implementation of audio sampling and visualization (e.g. MFFC, spectrogram). Introduction to 1D convolution and Recurrent Neural Networks. Implementation of Microsoft Azure - Speaker Recognition. Solution security analysis, attack vector through voice imitation, voice generation (deepfake). "},{"id":5,"href":"/biometric-systems/docs/labs/keystroke/","title":"Lab 5 - Keystroke","section":"Labs","content":" Keystroke dynamics # Identifying or confirming the identity of an individual based on the manner and the rhythm of typing on a keyboard. During the labolatory you will learn different approaches for Keystroke Dynamics (such as anomaly detection, clusterization, etc.).\nPre-read (Required) # Wojciech Wodo, Marek Klonowski, Piotr Syga, \u0026ldquo;SOME REMARKS ON KEYSTROKE DYNAMICS: Global Survillience, Retriving Information and Simple Countermeasures\u0026rdquo;, Proceedings of 7th International Conference on Security and Cryptography SECRYPT 2012, Rome 2012, ISBN: 978-989-8565-24-2 Wojciech Wodo, Lucjan Hanzlik, \u0026ldquo;Identity Security in Biometric Systems Based on Keystroking\u0026rdquo;, Proceedings of the 8th International Conference on Security and Cryptography: SECRYPT 2013, Reykjavik 2013, ISBN: 978-989-8565-73-0 Guansong Pang, Chunhua Shen, Longbing Cao, Anton van den Hengel, Deep Learning for Anomaly Detection: A Review "},{"id":6,"href":"/biometric-systems/docs/resources/","title":"Resources","section":"Docs","content":" Resources # Course website - Wojciech Wodo, PhD Getting started with Python Intro to Machine Learning "}]